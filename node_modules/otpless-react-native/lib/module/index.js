import { NativeModules, Platform, NativeEventEmitter } from 'react-native';
const LINKING_ERROR = `The package 'otpless-react-native' doesn't seem to be linked. Make sure: \n\n` + Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo Go\n';
const OtplessReactNative = NativeModules.OtplessReactNative ? NativeModules.OtplessReactNative : new Proxy({}, {
  get() {
    throw new Error(LINKING_ERROR);
  }
});
class OtplessBaseModule {
  onSignInCompleted() {
    OtplessReactNative.onSignInCompleted();
  }
  showFabButton(isShowFab) {
    OtplessReactNative.showFabButton(isShowFab);
  }
  isWhatsappInstalled(callback) {
    OtplessReactNative.isWhatsappInstalled(result => {
      const hasWhatsapp = result.hasWhatsapp === true;
      callback(hasWhatsapp);
    });
  }
}
class OtplessEventModule extends OtplessBaseModule {
  constructor(callback) {
    super();
    this.eventEmitter = new NativeEventEmitter(OtplessReactNative);
    this.eventEmitter.addListener('OTPlessSignResult', result => {
      callback(result);
    });
  }
  start() {
    let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    if (input == null) {
      OtplessReactNative.startOtplessWithEvent();
    } else {
      OtplessReactNative.startOtplessWithEventParams(input);
    }
  }
  clearListener() {
    this.eventEmitter.removeAllListeners;
  }
}
class OtplessModule extends OtplessBaseModule {
  start(callback) {
    OtplessReactNative.startOtplessWithCallback(result => {
      callback(result);
    });
  }
  startWithParams(input, callback) {
    OtplessReactNative.startOtplessWithCallbackParams(input, result => {
      callback(result);
    });
  }
  showLoginPage(callback) {
    let input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    OtplessReactNative.showOtplessLoginPage(input, result => {
      callback(result);
    });
  }
}
export { OtplessEventModule, OtplessModule };
//# sourceMappingURL=index.js.map